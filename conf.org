#+TITLE: init.org
#+AUTHOR: Tom Hutchings
#+BABEL: :cache yes
#+PROPERTY: header-args :tangle yes

* My init.org
  This is my init.el, except its written in org mode

* emacs setup
** packages
#+BEGIN_SRC emacs-lisp
(require 'package)
(add-to-list 'package-archives
             '("melpa" . "https://melpa.org/packages/"))
(package-initialize)
#+END_SRC

** personal files
   The =custom-file= must be set so as not to pollute our init.el with =custom-set-definitions=.
   In the =/lisp= directory I keep any standalone lisp files, such as major and minor modes I wrote.
   =/colors= has any custom color schemes I've picked up that don't exist in melpa.

#+BEGIN_SRC emacs-lisp
(setq custom-file "~/.emacs.d/custom.el")
(load custom-file)
(add-to-list 'load-path "~/.emacs.d/lisp/")
(add-to-list 'custom-theme-load-path "~/.emacs.d/colors/")
#+END_SRC

** editor config
   Here we configure the emacs text editor itself, the old fashioned bitch. Lots of this is just disabling menu bars, scroll bars, bells, cursors yada yada yada...

*** waifu-mode
    Ain't this a gem. It's a kind of image viewer, it picks random images from a given folder and shows them onscreen.
#+BEGIN_SRC emacs-lisp
(require 'waifu)
(waifu-keybind-to-dir
 '(("m" "~/Pictures/animu/madoka_magica/madoka")
   ("h" "~/Pictures/animu/madoka_magica/homura")
   ("s" "~/Pictures/animu/madoka_magica/sayaka")
   ("k" "~/Pictures/animu/madoka_magica/kyouko")
   ("M" "~/Pictures/animu/madoka_magica/mami")
   ("v" "~/Pictures/animu/gabriel_dropout/vigne")
   ("f" "~/Pictures/animu/re_zero/felix")
   ("p" "~/Pictures/animu/proggybooks")))
#+END_SRC

*** themes, font, prettifying
    Eventually I'll add a nice little dark/light mode switcher. For now we just load the theme...
#+BEGIN_SRC emacs-lisp
  ;; theme
  (load-theme 'base16-atlas)
  ;; (load-theme 'base16-atelier-estuary-light)
#+END_SRC

    Setting the font is pretty self explanatory. I've used Anonymous Pro for ages, it's pretty good at distinguishing 0/o, i/L, etc.
#+BEGIN_SRC emacs-lisp
  ;; fonts
  (set-frame-font "Anonymous Pro 13" nil t)
#+END_SRC

    This sections a doozy. Welcome to emacs in the 21st century. Basically we just have to disable all the ugly stuff emacs has by default, like menu bars. Who needs 'em. I have M-x, I have keybinds. Visible bell aka /SHUT THE FUCK UP EMACS/, inhibit startup because I know I'm using /GNU Emacs, one component of the GNU/Linux operating system/, turn off scroll bars and the weird fringes. Also =doom-modeline= makes the modeline look all nice.
#+BEGIN_SRC emacs-lisp
  (blink-cursor-mode 0)
  (setq visible-bell t)
  (setq ring-bell-function 'ignore)
  (setq initial-scratch-message "")
  (setq inhibit-startup-message t)
  (tool-bar-mode 0)
  (menu-bar-mode 0)
  (scroll-bar-mode 0)
  (fringe-mode 0)
  (setq frame-title-format "%b")

  (add-to-list 'default-frame-alist '(ns-transparent-titlebar . t))
  ;(add-to-list 'default-frame-alist '(ns-appearance . dark))
  (add-to-list 'default-frame-alist '(ns-appearance . light))

  ;; better modeline
  (require 'doom-modeline)
  (doom-modeline-mode 1)
#+END_SRC

*** editor functionality
    Most of this is pretty self-explanatory. Tramp wants to use ssh, ispell exists actually(thanks macOS for being macOS), smooth scrolling is nice, undo-tree everywhere, oh and please stop spewing backup files all over my file system.

#+BEGIN_SRC emacs-lisp
;; tramp
(setq tramp-default-method "ssh")

;; flyspell
(setq ispell-program-name "/usr/local/bin/ispell")

;; smooth scroll
(require 'smooth-scrolling)
(smooth-scrolling-mode 1)

(global-undo-tree-mode)

;; stop backups
(setq backup-inhibited t
      auto-save-default nil)
#+END_SRC

*** editor key bindings
    Most of my more specific key bindings are stored in =modal-soul.el=, a set of hydras which simulate a kind of modal-editing system ala vim. Other stuff here is just avy and setting up the ivy/counsel/swiper trinity.

#+BEGIN_SRC emacs-lisp
;; modal-soul, my hydras
(load "~/.emacs.d/lisp/modal-soul.el")
(which-key-mode)

;; avy bindings
(global-set-key (kbd "C-l") 'avy-goto-line)

;; ivy/counsel/swiper
(global-set-key "\C-s" 'swiper)
(counsel-mode)
#+END_SRC

** Language Config
   Finally we've transformed the ancient magicks of emacs from a 50 year old dusty old expensive typewriter into an elegant tool to weave the fabric of code. Or something. Now we can get to our language specific config and hooks. 

*** Org mode
    Org agenda would annoyingly mess up your windows and then not put them back. Be more like your respectable tidy brother magit.
    I'm not really sure what the babel thing is for lol.

#+BEGIN_SRC emacs-lisp
(setq org-agenda-restore-windows-after-quit 1)

(org-babel-do-load-languages
 'org-babel-load-languages
 '((dot . t)))
#+END_SRC

*** C/C++
    The siblings who don't want to be associated with each other, lumped in to the same hook once again. By default emacs formats C in a bizarre GNU way. Cool, but not for me. Or whoever else has to read my C code.
    The mode hook was to set up eglot, but since that's proved very difficult in OS dev stuff, and my main C programming is for OS dev, I just disabled it until I can be bothered.
#+BEGIN_SRC emacs-lisp
(setq c-default-style "linux"
      c-basic-offset 4)

(defun tokamach/c-c++-hook ()
  "Personal C/C++ hook."
  (setq company-backends
	(cons 'company-capf
	      (remove 'company-capf company-backends)))
	      (eglot-ensure))

;(add-hook 'c-mode-hook 'tokamach/c-c++-hook)
#+END_SRC

*** Lisps
    The language of the gods finally gets its turn. Do I want intelligent context dependent structural editing? *YES*. Do I want rainbows all over my parentheses? *YES*. Gimme that good shit.

#+BEGIN_SRC emacs-lisp
(defun tokamach/lisp-hook ()
  "Personal Lisp hook."
  (lispy-mode)
  (rainbow-delimiters-mode)
  (company-mode))

(add-hook 'emacs-lisp-mode-hook  #'tokamach/lisp-hook)
(add-hook 'common-lisp-mode-hook #'tokamach/lisp-hook)
(add-hook 'scheme-mode-hook      #'tokamach/lisp-hook)
(add-hook 'lisp-mode-hook        #'tokamach/lisp-hook)

;; Common Lisp
(require 'slime)
(setq inferior-lisp-program "/usr/local/bin/sbcl")
#+END_SRC

*** Latex
    This is really just wrestling with macOS. AuCTeX is really good out of the box.
#+BEGIN_SRC emacs-lisp
(exec-path-from-shell-initialize)
(setq TeX-parse-self t) ; Enable parse on load.
(setq TeX-auto-save t) ; Enable parse on save.
#+END_SRC
